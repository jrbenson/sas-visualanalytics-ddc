import * as content from "./content"
// @ponicode
describe("content.setupResizeListener", () => {
    test("0", () => {
        let callFunction: any = () => {
            content.setupResizeListener(() => "return callback value")
        }
    
        expect(callFunction).not.toThrow()
    })

    test("1", () => {
        let callFunction: any = () => {
            content.setupResizeListener(() => "")
        }
    
        expect(callFunction).not.toThrow()
    })
})

// @ponicode
describe("content.validateRoles", () => {
    test("0", () => {
        let object3: any = [{ label: "ISO 22000", value: "Dillenberg" }, { label: "label_2", value: "Dillenberg" }, { label: "label_2", value: "Dillenberg" }]
        let object2: any = [{ name: "Michael", label: "ISO 9001", type: "object", usage: "v4.0.0-rc.4", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Jean-Philippe", width: 1000, precision: 11, formatString: "Mon Aug 03 12:45:00" } }, { name: "Edmond", label: "label_1", type: "object", usage: "1.0.0", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Jean-Philippe", width: 1000, precision: 9, formatString: "Mon Aug 03 12:45:00" } }, { name: "Edmond", label: "ISO 9001", type: "number", usage: "v4.0.0-rc.4", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Anas", width: 680, precision: 11, formatString: "2017-09-29T19:01:00.000" } }]
        let object: any = [[1000, 256, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 10, 2], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 80]]
        let callFunction: any = () => {
            content.validateRoles({ version: "4.0.0-beta1\t", resultName: "Manager", rowCount: 3.0, availableRowCount: 12, data: object, columns: object2, parameters: object3 }, ["invoice", "deposit", "deposit", "deposit", "invoice"], undefined)
        }
    
        expect(callFunction).not.toThrow()
    })

    test("1", () => {
        let object3: any = [{ label: "AOP", value: "Elio" }]
        let object2: any = [{ name: "George", label: "label_2", type: "string", usage: "v1.2.4", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Pierre Edouard", width: 12, precision: 2, formatString: "Mon Aug 03 12:45:00" } }]
        let object: any = [[256, 2, 11, 1000], [1000], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 11, 80, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"]]
        let callFunction: any = () => {
            content.validateRoles({ version: "v4.0.0-rc.4", resultName: "Producer", rowCount: 5, availableRowCount: 12345, data: object, columns: object2, parameters: object3 }, ["deposit", "payment", "invoice", "invoice", "deposit"], undefined)
        }
    
        expect(callFunction).not.toThrow()
    })

    test("2", () => {
        let object3: any = [{ label: "label_1", value: "Dillenberg" }, { label: "ISO 9001", value: "elio@example.com" }, { label: "label_3", value: "elio@example.com" }, { label: "label_3", value: "Dillenberg" }]
        let object2: any = [{ name: "Anas", label: "ISO 9001", type: "number", usage: "v1.2.4", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "George", width: 8, precision: 1, formatString: "2017-09-29T23:01:00.000Z" } }]
        let object: any = [["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 256, 256, 5], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"]]
        let callFunction: any = () => {
            content.validateRoles({ version: "4.0.0-beta1\t", resultName: "Developer", rowCount: 10, availableRowCount: "a1969970175", data: object, columns: object2, parameters: object3 }, ["invoice", "deposit", "invoice", "withdrawal"], undefined)
        }
    
        expect(callFunction).not.toThrow()
    })

    test("3", () => {
        let object3: any = [{ label: "ISO 9001", value: "elio@example.com" }, { label: "ISO 9001", value: "Elio" }, { label: "label_1", value: "Elio" }]
        let object2: any = [{ name: "Anas", label: "label_2", type: "number", usage: "1.0.0", aggregation: "\"[3,\"false\",false]\"", format: { name: "Jean-Philippe", width: 10, precision: 11, formatString: "Mon Aug 03 12:45:00" } }, { name: "Anas", label: "AOP", type: "array", usage: "v1.2.4", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Anas", width: 20, precision: 14, formatString: "2017-09-29T19:01:00.000" } }, { name: "Anas", label: "ISO 9001", type: "number", usage: "^5.0.0", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Jean-Philippe", width: 25, precision: 14, formatString: "2017-09-29T19:01:00.000" } }]
        let object: any = [[32, 128, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 5, 128], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 80]]
        let callFunction: any = () => {
            content.validateRoles({ version: "1.0.0", resultName: "Manager", rowCount: 5, availableRowCount: 12345, data: object, columns: object2, parameters: object3 }, ["deposit", "deposit", "invoice", "payment", "withdrawal"], { This: "is", an: "object", Do: 0, you: 1, Like: 2, it: 10000 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("4", () => {
        let object3: any = [{ label: "ISO 9001", value: "Elio" }]
        let object2: any = [{ name: "George", label: "label_2", type: "array", usage: "v1.2.4", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Jean-Philippe", width: 680, precision: 9, formatString: "01:04:03" } }]
        let object: any = [[32, 1, 256, 1], [1000], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 1000, 256, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"]]
        let callFunction: any = () => {
            content.validateRoles({ version: "v1.2.4", resultName: "Producer", rowCount: 30, availableRowCount: "bc23a9d531064583ace8f67dad60f6bb", data: object, columns: object2, parameters: object3 }, ["withdrawal", "deposit", "invoice", "invoice", "payment"], { This: "is", an: "object", Do: 0, you: 1, Like: 2, it: 10000 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("5", () => {
        let callFunction: any = () => {
            content.validateRoles({ version: "", resultName: "", rowCount: Infinity, availableRowCount: Infinity, data: [], columns: [], parameters: [] }, [], undefined)
        }
    
        expect(callFunction).not.toThrow()
    })
})

// @ponicode
describe("content.initializeSelections", () => {
    test("0", () => {
        let object3: any = [{ label: "label_1", value: "Elio" }, { label: "ISO 9001", value: "Elio" }, { label: "AOP", value: "Dillenberg" }, { label: "ISO 9001", value: "Elio" }, { label: "label_3", value: "elio@example.com" }]
        let object2: any = [{ name: "Anas", label: "label_3", type: "object", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Michael", width: 680, precision: 14, formatString: "2017-09-29T23:01:00.000Z" } }, { name: "Pierre Edouard", label: "label_2", type: "object", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"[3,\"false\",false]\"", format: { name: "Pierre Edouard", width: 9, precision: 0, formatString: "2017-09-29T23:01:00.000Z" } }, { name: "Pierre Edouard", label: "label_3", type: "array", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Anas", width: 720, precision: 9, formatString: "Mon Aug 03 12:45:00" } }, { name: "Pierre Edouard", label: "label_2", type: "object", usage: "brush", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Anas", width: 287, precision: 11, formatString: "2017-09-29T19:01:00.000" } }, { name: "Michael", label: "label_2", type: "object", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Pierre Edouard", width: 0.5, precision: 14, formatString: "2017-09-29T23:01:00.000Z" } }]
        let object: any = [[1000, 2, 4, 10], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 1, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 11]]
        let callFunction: any = () => {
            content.initializeSelections({ version: "^5.0.0", resultName: "Architect", rowCount: 0, availableRowCount: 12, data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("1", () => {
        let object3: any = [{ label: "label_1", value: "Elio" }, { label: "AOP", value: "elio@example.com" }, { label: "ISO 22000", value: "Elio" }, { label: "ISO 22000", value: "elio@example.com" }, { label: "label_2", value: "Dillenberg" }]
        let object2: any = [{ name: "George", label: "label_3", type: "number", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"[3,\"false\",false]\"", format: { name: "Jean-Philippe", width: 576, precision: 1, formatString: "2017-09-29T19:01:00.000" } }, { name: "George", label: "label_2", type: "string", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Anas", width: 576, precision: 1, formatString: "2017-09-29T23:01:00.000Z" } }]
        let object: any = [[32], [11, 11, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 11]]
        let callFunction: any = () => {
            content.initializeSelections({ version: "4.0.0-beta1\t", resultName: "Developer", rowCount: 10, availableRowCount: 56784, data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("2", () => {
        let object3: any = [{ label: "label_1", value: "Elio" }, { label: "label_1", value: "Dillenberg" }, { label: "label_1", value: "Dillenberg" }, { label: "ISO 9001", value: "Elio" }, { label: "AOP", value: "elio@example.com" }]
        let object2: any = [{ name: "Pierre Edouard", label: "ISO 9001", type: "object", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Michael", width: 800, precision: 1, formatString: "2017-09-29T19:01:00.000" } }, { name: "Edmond", label: "AOP", type: "object", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Jean-Philippe", width: 64, precision: 0.0, formatString: "2017-09-29T19:01:00.000" } }, { name: "Michael", label: "ISO 22000", type: "array", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Anas", width: 12, precision: 0.0, formatString: "01:04:03" } }, { name: "Anas", label: "ISO 9001", type: "string", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Jean-Philippe", width: 0.0, precision: 11, formatString: "Mon Aug 03 12:45:00" } }, { name: "Edmond", label: "ISO 9001", type: "number", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"[3,\"false\",false]\"", format: { name: "George", width: 99, precision: 0, formatString: "01:04:03" } }]
        let object: any = [[10, 10, 5, 128], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 16, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 2]]
        let callFunction: any = () => {
            content.initializeSelections({ version: "v1.2.4", resultName: "Manager", rowCount: 5, availableRowCount: 12, data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("3", () => {
        let object3: any = [{ label: "AOP", value: "Dillenberg" }, { label: "label_2", value: "Elio" }, { label: "label_3", value: "Elio" }, { label: "label_1", value: "elio@example.com" }]
        let object2: any = [{ name: "Michael", label: "AOP", type: "array", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"[3,\"false\",false]\"", format: { name: "Pierre Edouard", width: 544, precision: 2, formatString: "01:04:03" } }]
        let object: any = [["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], [5, 32, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 1000], [32, 16, 10], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 32]]
        let callFunction: any = () => {
            content.initializeSelections({ version: "v1.2.4", resultName: "Architect", rowCount: 10, availableRowCount: "bc23a9d531064583ace8f67dad60f6bb", data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("4", () => {
        let object3: any = [{ label: "AOP", value: "Elio" }, { label: "label_3", value: "elio@example.com" }, { label: "label_1", value: "Elio" }, { label: "ISO 9001", value: "Elio" }, { label: "AOP", value: "Elio" }]
        let object2: any = [{ name: "Michael", label: "label_3", type: "string", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Pierre Edouard", width: 1080, precision: 0, formatString: "01:04:03" } }, { name: "George", label: "label_2", type: "object", usage: "brush", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "George", width: 24, precision: 11, formatString: "Mon Aug 03 12:45:00" } }, { name: "Michael", label: "ISO 22000", type: "array", usage: "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Anas", width: 48000, precision: 11, formatString: "01:04:03" } }, { name: "Michael", label: "label_1", type: "string", usage: "brush", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Jean-Philippe", width: 287, precision: 2, formatString: "01:04:03" } }, { name: "Pierre Edouard", label: "ISO 9001", type: "number", usage: "brush", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "George", width: 24000, precision: 1, formatString: "2017-09-29T19:01:00.000" } }]
        let object: any = [[5, 16, 256, 1000], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 5, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 80]]
        let callFunction: any = () => {
            content.initializeSelections({ version: "1.0.0", resultName: "Manager", rowCount: 4, availableRowCount: "bc23a9d531064583ace8f67dad60f6bb", data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("5", () => {
        let callFunction: any = () => {
            content.initializeSelections({ version: "", resultName: "", rowCount: -Infinity, availableRowCount: -Infinity, data: [], columns: [], parameters: [] })
        }
    
        expect(callFunction).not.toThrow()
    })
})

// @ponicode
describe("content.convertDateColumns", () => {
    test("0", () => {
        let object3: any = [{ label: "label_1", value: "Elio" }, { label: "AOP", value: "elio@example.com" }, { label: "ISO 9001", value: "elio@example.com" }]
        let object2: any = [{ name: "Michael", label: "label_3", type: "date", usage: "^5.0.0", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "George", width: 120, precision: 0, formatString: "DATE9" } }, { name: "Pierre Edouard", label: "ISO 9001", type: "date", usage: "4.0.0-beta1\t", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Pierre Edouard", width: 287, precision: 0, formatString: "JULIAN7" } }, { name: "Jean-Philippe", label: "ISO 22000", type: "object", usage: "^5.0.0", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Pierre Edouard", width: 1000, precision: 14, formatString: "DDMMYY8" } }, { name: "Edmond", label: "ISO 22000", type: "array", usage: "^5.0.0", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Michael", width: 15, precision: 1, formatString: "DDMMYY8" } }, { name: "Jean-Philippe", label: "AOP", type: "date", usage: "4.0.0-beta1\t", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Pierre Edouard", width: 80.0, precision: 2, formatString: "DATE9" } }]
        let object: any = [[1, 80, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 256, 1000, 4], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 4, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"]]
        let callFunction: any = () => {
            content.convertDateColumns({ version: "v4.0.0-rc.4", resultName: "Manager", rowCount: 30, availableRowCount: 987650, data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("1", () => {
        let object3: any = [{ label: "label_2", value: "Dillenberg" }, { label: "label_1", value: "Dillenberg" }, { label: "ISO 9001", value: "Elio" }]
        let object2: any = [{ name: "Jean-Philippe", label: "AOP", type: "number", usage: "v4.0.0-rc.4", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Anas", width: 0, precision: 0.0, formatString: "DATE9" } }, { name: "George", label: "label_1", type: "string", usage: "v4.0.0-rc.4", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Pierre Edouard", width: 287, precision: 11, formatString: "DDMMYY8" } }, { name: "Jean-Philippe", label: "label_1", type: "array", usage: "1.0.0", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "George", width: 5, precision: 0.0, formatString: "DATE9" } }, { name: "Edmond", label: "label_1", type: "date", usage: "4.0.0-beta1\t", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Edmond", width: 576, precision: 9, formatString: "01:04:03" } }, { name: "Jean-Philippe", label: "AOP", type: "string", usage: "1.0.0", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Anas", width: 255, precision: 0, formatString: "DATE9" } }]
        let object: any = [[2, 11, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 16, 2, 16], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 80, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"]]
        let callFunction: any = () => {
            content.convertDateColumns({ version: "4.0.0-beta1\t", resultName: "Producer", rowCount: 30, availableRowCount: 56784, data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("2", () => {
        let object3: any = [{ label: "label_1", value: "Elio" }, { label: "AOP", value: "Dillenberg" }]
        let object2: any = [{ name: "Edmond", label: "label_2", type: "number", usage: "^5.0.0", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Pierre Edouard", width: 720, precision: 11, formatString: "DATE9" } }, { name: "Michael", label: "ISO 9001", type: "number", usage: "4.0.0-beta1\t", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Edmond", width: 6, precision: 9, formatString: "DDMMYY8" } }, { name: "George", label: "label_2", type: "date", usage: "^5.0.0", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Pierre Edouard", width: 2048, precision: 11, formatString: "Mon Aug 03 12:45:00" } }, { name: "Edmond", label: "AOP", type: "string", usage: "^5.0.0", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "George", width: 20, precision: 11, formatString: "DDMMYY8" } }]
        let object: any = [[128], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"]]
        let callFunction: any = () => {
            content.convertDateColumns({ version: "4.0.0-beta1\t", resultName: "Manager", rowCount: 10, availableRowCount: 56784, data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("3", () => {
        let object3: any = [{ label: "label_2", value: "Dillenberg" }]
        let object2: any = [{ name: "Michael", label: "ISO 9001", type: "string", usage: "1.0.0", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Edmond", width: 1080, precision: 0, formatString: "2017-09-29T23:01:00.000Z" } }]
        let object: any = [[2], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"]]
        let callFunction: any = () => {
            content.convertDateColumns({ version: "v4.0.0-rc.4", resultName: "Producer", rowCount: 0, availableRowCount: 12, data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("4", () => {
        let object3: any = [{ label: "AOP", value: "Dillenberg" }, { label: "ISO 22000", value: "Dillenberg" }]
        let object2: any = [{ name: "Jean-Philippe", label: "label_2", type: "array", usage: "^5.0.0", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "George", width: 480, precision: 14, formatString: "2017-09-29T23:01:00.000Z" } }, { name: "Pierre Edouard", label: "AOP", type: "date", usage: "v1.2.4", aggregation: "\"[3,\"false\",false]\"", format: { name: "George", width: 400, precision: 0, formatString: "JULIAN7" } }, { name: "Edmond", label: "ISO 22000", type: "date", usage: "^5.0.0", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Anas", width: 1.5, precision: 2, formatString: "JULIAN7" } }, { name: "George", label: "ISO 22000", type: "string", usage: "v4.0.0-rc.4", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Michael", width: 99, precision: 2, formatString: "01:04:03" } }]
        let object: any = [[128], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"]]
        let callFunction: any = () => {
            content.convertDateColumns({ version: "v1.2.4", resultName: "Manager", rowCount: 30, availableRowCount: 56784, data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("5", () => {
        let callFunction: any = () => {
            content.convertDateColumns({ version: "", resultName: "", rowCount: NaN, availableRowCount: NaN, data: [], columns: [], parameters: [] })
        }
    
        expect(callFunction).not.toThrow()
    })
})

// @ponicode
describe("content.getVAParameters", () => {
    test("0", () => {
        let object3: any = [{ label: "ISO 22000", value: "Elio" }, { label: "ISO 22000", value: "elio@example.com" }, { label: "label_3", value: "elio@example.com" }, { label: "label_1", value: "elio@example.com" }, { label: "AOP", value: "Dillenberg" }]
        let object2: any = [{ name: "Anas", label: "label_3", type: "object", usage: "v4.0.0-rc.4", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Michael", width: 30, precision: 1, formatString: "2017-09-29T23:01:00.000Z" } }, { name: "Jean-Philippe", label: "ISO 22000", type: "number", usage: "4.0.0-beta1\t", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Pierre Edouard", width: 64, precision: 1, formatString: "Mon Aug 03 12:45:00" } }, { name: "Anas", label: "ISO 22000", type: "number", usage: "v1.2.4", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "George", width: 48000, precision: 14, formatString: "2017-09-29T19:01:00.000" } }, { name: "Michael", label: "label_1", type: "object", usage: "4.0.0-beta1\t", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Edmond", width: 150, precision: 14, formatString: "Mon Aug 03 12:45:00" } }, { name: "Pierre Edouard", label: "label_1", type: "object", usage: "4.0.0-beta1\t", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Jean-Philippe", width: 720, precision: 1, formatString: "2017-09-29T23:01:00.000Z" } }]
        let object: any = [[10, 1000, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], [16, 4]]
        let callFunction: any = () => {
            content.getVAParameters({ version: "v1.2.4", resultName: "Architect", rowCount: 4, availableRowCount: "bc23a9d531064583ace8f67dad60f6bb", data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("1", () => {
        let object3: any = [{ label: "label_1", value: "elio@example.com" }, { label: "ISO 22000", value: "elio@example.com" }, { label: "ISO 22000", value: "Elio" }, { label: "label_1", value: "Dillenberg" }]
        let object2: any = [{ name: "Edmond", label: "label_3", type: "array", usage: "1.0.0", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Edmond", width: 320, precision: 11, formatString: "01:04:03" } }, { name: "Anas", label: "ISO 9001", type: "array", usage: "v1.2.4", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Anas", width: 390, precision: 1, formatString: "2017-09-29T19:01:00.000" } }, { name: "Edmond", label: "label_2", type: "object", usage: "v1.2.4", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "George", width: 287, precision: 11, formatString: "2017-09-29T19:01:00.000" } }, { name: "Edmond", label: "label_3", type: "string", usage: "4.0.0-beta1\t", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "George", width: 200, precision: 2, formatString: "2017-09-29T23:01:00.000Z" } }]
        let object: any = [["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], [2], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 10, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"]]
        let callFunction: any = () => {
            content.getVAParameters({ version: "4.0.0-beta1\t", resultName: "Producer", rowCount: 0, availableRowCount: "bc23a9d531064583ace8f67dad60f6bb", data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("2", () => {
        let object3: any = [{ label: "label_3", value: "elio@example.com" }]
        let object2: any = [{ name: "George", label: "ISO 9001", type: "object", usage: "^5.0.0", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Jean-Philippe", width: 432, precision: 14, formatString: "2017-09-29T19:01:00.000" } }, { name: "Jean-Philippe", label: "AOP", type: "array", usage: "v4.0.0-rc.4", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "George", width: 400, precision: 9, formatString: "Mon Aug 03 12:45:00" } }, { name: "Pierre Edouard", label: "ISO 9001", type: "array", usage: "1.0.0", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Anas", width: 100, precision: 1, formatString: "Mon Aug 03 12:45:00" } }, { name: "George", label: "label_3", type: "string", usage: "1.0.0", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Pierre Edouard", width: 40, precision: 1, formatString: "2017-09-29T23:01:00.000Z" } }]
        let object: any = [["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 32]]
        let callFunction: any = () => {
            content.getVAParameters({ version: "1.0.0", resultName: "Developer", rowCount: 10, availableRowCount: 12, data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("3", () => {
        let object3: any = [{ label: "ISO 22000", value: "elio@example.com" }]
        let object2: any = [{ name: "Pierre Edouard", label: "ISO 9001", type: "number", usage: "^5.0.0", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Jean-Philippe", width: 432, precision: 9, formatString: "01:04:03" } }, { name: "Michael", label: "label_2", type: "string", usage: "v1.2.4", aggregation: "\"[3,\"false\",false]\"", format: { name: "Anas", width: 2, precision: 9, formatString: "01:04:03" } }, { name: "Jean-Philippe", label: "AOP", type: "string", usage: "v4.0.0-rc.4", aggregation: "\"\"2006-01-02T14:04:05.000Z\"\"", format: { name: "Anas", width: 30, precision: 1, formatString: "01:04:03" } }, { name: "Michael", label: "AOP", type: "object", usage: "v1.2.4", aggregation: "\"{\"x\":[10,null,null,null]}\"", format: { name: "Jean-Philippe", width: 40, precision: 11, formatString: "2017-09-29T19:01:00.000" } }]
        let object: any = [["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 32]]
        let callFunction: any = () => {
            content.getVAParameters({ version: "v4.0.0-rc.4", resultName: "Producer", rowCount: 4, availableRowCount: 987650, data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("4", () => {
        let object3: any = [{ label: "ISO 22000", value: "Dillenberg" }, { label: "label_1", value: "elio@example.com" }]
        let object2: any = [{ name: "Pierre Edouard", label: "label_3", type: "number", usage: "^5.0.0", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Edmond", width: 200, precision: 0.0, formatString: "01:04:03" } }, { name: "Michael", label: "label_1", type: "string", usage: "4.0.0-beta1\t", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Jean-Philippe", width: 16, precision: 0.0, formatString: "2017-09-29T23:01:00.000Z" } }, { name: "Anas", label: "AOP", type: "number", usage: "1.0.0", aggregation: "\"[3,\"false\",false]\"", format: { name: "Edmond", width: 12000, precision: 1, formatString: "01:04:03" } }, { name: "Edmond", label: "ISO 22000", type: "object", usage: "^5.0.0", aggregation: "\"{\"x\":5,\"y\":6}\"", format: { name: "Anas", width: 80.0, precision: 1, formatString: "2017-09-29T19:01:00.000" } }]
        let object: any = [["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], [1, 10, 32], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 80, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 1, "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E"], ["data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22undefined%22%20height%3D%22undefined%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22NaN%22%20y%3D%22NaN%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3Eundefinedxundefined%3C%2Ftext%3E%3C%2Fsvg%3E", 11, 80]]
        let callFunction: any = () => {
            content.getVAParameters({ version: "4.0.0-beta1\t", resultName: "Architect", rowCount: 4, availableRowCount: 12, data: object, columns: object2, parameters: object3 })
        }
    
        expect(callFunction).not.toThrow()
    })

    test("5", () => {
        let callFunction: any = () => {
            content.getVAParameters({ version: "", resultName: "", rowCount: Infinity, availableRowCount: Infinity, data: [], columns: [], parameters: [] })
        }
    
        expect(callFunction).not.toThrow()
    })
})
